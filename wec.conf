######
# Windows Event Collector source
source s_wec {
    windowsevent(
        #prefix(".SDATA.")
    );
};

######
# Parse the Windows Events using the xml parser
# and store the results in .SDATA
parser p_winevent {
    xml(
        prefix(".SDATA.")
    );
};

######
# Use a Python parser to parse additional information 
# from the windows events
parser p_winevent_message {
    python(
        class("WinEventMessage")
    );
};

######
# The Python parser for Windows events
python {
import re
class WinEventMessage(object):
    def init(self, options):
        self.regex = re.compile(r"([^:]+):(?: ?)((|.+?))(\n|$)")
        self.root_keys = [
            '.SDATA.Event.System',
            '.SDATA.Event.RenderingInfo'
        ]
        self.data_keys = [
            '.SDATA.Event.EventData.Data'
        ]
        self.msg_keys = [
            '.SDATA.Event.RenderingInfo.Message'
        ]
        return True
    def deinit(self):
        return True
    def parse(self, msg):
        stored_name = None
        for key in msg.keys():
            for skey in self.root_keys:
                if key.startswith(skey):
                    nkey = re.sub(skey.replace('.', '\.') + '\.(.*)', '\\1', key)
                    msg['.kv.message.' + nkey] = msg[key]
            for dkey in self.data_keys:
                if key.startswith(dkey):
                    if key.endswith('_Name'):
                        stored_name = msg[key]
                    else:
                        if stored_name:
                            msg['.kv.message.' + stored_name] = msg[key]
                            stored_name = None
            for mkey in self.msg_keys:
                matches = self.regex.finditer(msg[mkey])
                if matches:
                    for match in matches:
                        msg['.kv.message.' + match.group(1)] = match.group(2)
        return True
};

######
# Parse the file hashes from the extracted 'Hashes' value
parser p_winevent_hashes {
    kv-parser (
        prefix(".SDATA.hash.")
        template("${.kv.message.Hashes}")
        pair-separator(",")
        value-separator("=")
    );
};

######
# Rewrite the hostname from the windows event Computer field
rewrite r_host{
    set("${.SDATA.Event.System.Computer}", value("HOST"));
};

######
# Rewrite the program from the windows event Computer field
rewrite r_program{
    set("winevent", value("PROGRAM"));
};

######
# The log chain for a windows event
log {
    source(s_wec);
    parser(p_winevent);
    parser(p_winevent_message);
    parser(p_winevent_hashes);
    rewrite(r_host);
    rewrite(r_program);
    destination {
        file(
            "/var/log/wec.log"
            template(---json---)
        );
    };
    destination(d_storebox);
};
